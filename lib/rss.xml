<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[ML-Course]]></title><description><![CDATA[Obsidian digital garden]]></description><link>http://github.com/dylang/node-rss</link><image><url>lib\media\favicon.png</url><title>ML-Course</title><link></link></image><generator>Webpage HTML Export plugin for Obsidian</generator><lastBuildDate>Mon, 12 Aug 2024 23:45:23 GMT</lastBuildDate><atom:link href="lib\rss.xml" rel="self" type="application/rss+xml"/><pubDate>Mon, 12 Aug 2024 23:45:22 GMT</pubDate><ttl>60</ttl><dc:creator></dc:creator><item><title><![CDATA[Co dalej]]></title><description><![CDATA[ 
 <br><img alt="PythonFruitClass.png" src="lib\media\pythonfruitclass.png"><br>
Źródło: <a data-footref="meme1" href="about:blank#fn-1-e7278561d5bd0047" class="footnote-link" target="_self" rel="noopener">[1]</a><br><br>Przejdź do kolejnego zagadnienia (<a data-href="Używanie bibliotek" href="tematy\files-wstęp-do-języka-python\używanie-bibliotek.html" class="internal-link" target="_self" rel="noopener">Używanie bibliotek</a>) lub kliknij <a data-tooltip-position="top" aria-label="Wstęp do języka Python" data-href="Wstęp do języka Python" href="tematy\wstęp-do-języka-python.html" class="internal-link" target="_self" rel="noopener">tutaj</a>, aby wrócić do strony głównej tematu.<br><br><br>
<br>
<br><a rel="noopener" class="external-link" href="https://programmerhumor.io/python-memes/python-is-easy-they-say/" target="_blank">https://programmerhumor.io/python-memes/python-is-easy-they-say/</a><a href="about:blank#fnref-1-e7278561d5bd0047" class="footnote-backref footnote-link" target="_self" rel="noopener">↩︎</a>
]]></description><link>tematy\files-wstęp-do-języka-python\funkcje-i-klasy.html</link><guid isPermaLink="false">Tematy/Files Wstęp do języka Python/Funkcje i klasy.md</guid><pubDate>Mon, 12 Aug 2024 22:58:00 GMT</pubDate><enclosure url="lib\media\pythonfruitclass.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;lib\media\pythonfruitclass.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Jak korzystać z Jupyter Notebooks]]></title><description><![CDATA[ 
 ]]></description><link>tematy\files-wstęp-do-języka-python\jak-korzystać-z-jupyter-notebooks.html</link><guid isPermaLink="false">Tematy/Files Wstęp do języka Python/Jak korzystać z Jupyter Notebooks.md</guid><pubDate>Mon, 12 Aug 2024 21:25:58 GMT</pubDate></item><item><title><![CDATA[Listy, krotki i zbiory]]></title><description><![CDATA[ 
 ]]></description><link>tematy\files-wstęp-do-języka-python\listy,-krotki-i-zbiory.html</link><guid isPermaLink="false">Tematy/Files Wstęp do języka Python/Listy, krotki i zbiory.md</guid><pubDate>Mon, 12 Aug 2024 21:25:58 GMT</pubDate></item><item><title><![CDATA[Pętle i instrukcje warunkowe]]></title><description><![CDATA[ 
 ]]></description><link>tematy\files-wstęp-do-języka-python\pętle-i-instrukcje-warunkowe.html</link><guid isPermaLink="false">Tematy/Files Wstęp do języka Python/Pętle i instrukcje warunkowe.md</guid><pubDate>Mon, 12 Aug 2024 21:25:58 GMT</pubDate></item><item><title><![CDATA[Język interpretowany]]></title><description><![CDATA[ 
 <br><br>Python jest językiem interpretowanym, więc do korzystania z niego nie jest wymagany kompilator (wykorzystywany jest interpreter). Innymi przykładami tego typu języków są Bash, PHP lub JavaScript. Oznacza to, że skrypt jest przechowywany w formie kodu i interpretowany przy każdym uruchomieniu, a nie konwertowany na kod maszynowy jednorazowo <a data-footref="interp" href="about:blank#fn-1-e7278561d5bd0047" class="footnote-link" target="_self" rel="noopener">[1]</a>.<br><br><img alt="PythonWhere.png" src="lib\media\pythonwhere.png"><br>
Źródło: <a data-footref="meme2" href="about:blank#fn-2-e7278561d5bd0047" class="footnote-link" target="_self" rel="noopener">[2]</a><br>Tak jak na obrazku powyżej, programując w Pythonie na końcu linii nie stawia się średnika. Dla tych, którym w C++ się o tym zapomina, może być to ułatwienie, ale dla osób, które pisały "kilka linijek w jednej linijce" i oddzielały je średnikami to będzie wymagało przestawienia.<br>Na obrazku powyżej wspomniane były też klamry, bo ich też nie ma (więcej o tym jak wyglądają pętle i instrukcje warunkowe będzie dalej). Ale jeśli nie ma klamr, to skąd interpreter ma wiedzieć, które linie kodu są wewnątrz if'a, a które już poza? I tutaj przechodzimy do kolejnego obrazka...<br><img alt="NoIndent.png" src="lib\media\noindent.png"><br>
Źródło: <a data-footref="meme1" href="about:blank#fn-3-e7278561d5bd0047" class="footnote-link" target="_self" rel="noopener">[3]</a><br><br>Programując w C++ wcięcia zwiększają jedynie czytelność kodu dla programisty i można je pomijać. W przypadku Pythona wcięcia muszą być identyczne, żeby interpreter dobrze przetworzył kod. Wydaje mi się, że najlepiej jest to pokazać na przykładzie, więc taki znajduje się poniżej.<br>for i in range(3): 
	for j in range(3):
		result = i*10+j
		print(result)
	print("Wykonam się po skończeniu się pętli z j")
print("Wykonam się po skończeniu się pętli z i")
Copy<br>Nie wchodzimy na razie w szczegóły pętli i jak działa in range, ale wynikiem byłoby:<br>0
1
2
Wykonam się po skończeniu się pętli z j
10
11
12
Wykonam się po skończeniu się pętli z j
20
21
22
Wykonam się po skończeniu się pętli z j
Wykonam się po skończeniu się pętli z i
Copy<br>Czyli jak widać wpierw w pętli wewnętrznej (z podwójnym wcięciem) jest dodawanie, a następnie wypisywanie w konsoli wyniku. Po wykonaniu się pętli wewnętrznej, w konsoli pojawia się odpowiednia wiadomość (zwrócę uwagę, że for j in range(3): i print("Wykonam się po skończeniu się pętli z j")również mają identyczne wcięcia, bo są wewnątrz pętli ze zmienną i). Gdy pętla zewnętrzna wykona się odpowiednią ilość razy to w konsoli również pojawia się odpowiednia wiadomość.<br>W przykładzie użyłem tabulatora do robienia wcięć, ale równie dobrze można używać spacji - jedynie wcięcie musi mieć zawsze równą wielkość!<br><br>W Pythonie komentarze dodaje się po #, np:<br># Ta linia to komentarz
print("Hello world!") # A tu komentarz w linii z kodem
Copy<br>Możliwe są również komentarze wieloliniowe poprzez umieszczenie ich wewnątrz ``` ```. Ten drugi jest przydatny np. do przygotowania opisu funkcji, gdzie można w ten sposób opisać czym jest każda zmienna.<br><br>Przejdź do kolejnego zagadnienia (<a data-href="Zmienne i podstawowe typy danych" href="tematy\files-wstęp-do-języka-python\zmienne-i-podstawowe-typy-danych.html" class="internal-link" target="_self" rel="noopener">Zmienne i podstawowe typy danych</a>) lub kliknij <a data-tooltip-position="top" aria-label="Wstęp do języka Python" data-href="Wstęp do języka Python" href="tematy\wstęp-do-języka-python.html" class="internal-link" target="_self" rel="noopener">tutaj</a>, aby wrócić do strony głównej tematu.<br><br><br><br><br>
<br>
<br><a rel="noopener" class="external-link" href="https://en.wikipedia.org/wiki/Interpreter_(computing)" target="_blank">https://en.wikipedia.org/wiki/Interpreter_(computing)</a><a href="about:blank#fnref-1-e7278561d5bd0047" class="footnote-backref footnote-link" target="_self" rel="noopener">↩︎</a>
<br><a rel="noopener" class="external-link" href="https://programmerhumor.io/python-memes/after-using-only-c-and-c-for-years-python-felt-kinda-strange/" target="_blank">https://programmerhumor.io/python-memes/after-using-only-c-and-c-for-years-python-felt-kinda-strange/</a><a href="about:blank#fnref-2-e7278561d5bd0047" class="footnote-backref footnote-link" target="_self" rel="noopener">↩︎</a>
<br><a rel="noopener" class="external-link" href="https://programmerhumor.io/programming-memes/no-offence-python-from-one-python-lover-to-others/" target="_blank">https://programmerhumor.io/programming-memes/no-offence-python-from-one-python-lover-to-others/</a><a href="about:blank#fnref-3-e7278561d5bd0047" class="footnote-backref footnote-link" target="_self" rel="noopener">↩︎</a>
]]></description><link>tematy\files-wstęp-do-języka-python\składnia-w-języku-python.html</link><guid isPermaLink="false">Tematy/Files Wstęp do języka Python/Składnia w języku Python.md</guid><pubDate>Mon, 12 Aug 2024 22:21:18 GMT</pubDate><enclosure url="lib\media\pythonwhere.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;lib\media\pythonwhere.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Po co używać biblioteki?]]></title><description><![CDATA[ 
 <br><br>Jeżeli będziemy pracowali nad jakimś projektem związanym z ... w sumie praktycznie z czymkolwiek to jest duże prawdopodobieństwo, że ktoś już coś podobnego robił i potrzebował do tego przygotować sobie narzędzia (funkcje, klasy) i stworzył z ich wykorzystaniem bibliotekę, więc możemy ją pobrać i korzystać z tego co ktoś przygotował i zaoszczędzić przy tym czas. Wg <a data-footref="mgl" href="about:blank#fn-1-e7278561d5bd0047" class="footnote-link" target="_self" rel="noopener">[1]</a> istnieje ponad 137.000 bibliotek, ale spokojnie, my będziemy korzystać z kilkunastu (być może kilkudziesięciu, ale to pojedyncze funkcje będą). To jak dużo jest bibliotek dobrze jest widoczne na zrzucie ekranu poniżej.<br><img alt="Libraries_in_python.png" src="lib\media\libraries_in_python.png"><br><br>Instalowanie bibliotek odbywa się z wykorzystaniem pip. Najlepiej odszukać w internecie nazwę interesującej nas biblioteki (bo nie zawsze nazwa przy importowaniu jest jednakowa jak przy instalacji), a następnie w konsoli użyć komendy:<br>pip install nazwa_biblioteki
Copy<br>W przypadku instalowania wielu bibliotek można to zrobić następująco:<br>pip install nazwa_biblioteki1 nazwa_biblioteki2
Copy<br>Czasami może być konieczność zainstalowania konkretnej wersji biblioteki (np. aby była kompatybilna z inną biblioteką). Należy wówczas użyć:<br>pip install nazwa_biblioteki==wersja
Copy<br>lub kombinacji &gt;, &lt;, &gt;= lub &lt;=, np.<br>pip install numpy&lt;=1.25.2
Copy<br>lub<br>pip install "numpy&gt;1.18.5,&lt;=1.25.2"
Copy<br>Dobrym zwyczajem jest również tworzenie pliku requirements.txt, w którym wypisane są wszystkie wykorzystywane biblioteki (jest to zwykły plik tekstowy, który można zrobić nawet w notatniku). Pozwoli to każdemu komu wyślemy kod na zainstalowanie tych samych bibliotek i tym samym uruchomienie skryptu (bez zainstalowania niestety nie pójdzie). Po utworzeniu pliku requirements.txt można łatwo całość zainstalować poleceniem<br>pip install -r requirements.txt
Copy<br><br>Po zainstalowaniu biblioteki, jej zaimportowanie jest proste. Wystarczy w skrypcie wpisać<br>import nazwa_biblioteki
Copy<br>Możliwe jest również nadanie aliasu (np. jeżeli biblioteka ma długą nazwę) lub zaimportowanie jedynie pewnych składników<br>import nazwa_biblioteki as alias_bibl # Importowanie z aliasem

from nazwa_biblioteki import funkcja, klasa # Importowanie wybranych składników
Copy<br>Tip
Należy zwrócić uwagę na to w jaki sposób importujemy bibliotekę, bo ma to wpływ na dalszy kod (np. po nadaniu aliasu nie możemy odwołać się do biblioteki pod jej standardową nazwą)
<br>Korzystanie z funkcji jest również stosunkowo proste. Załóżmy, że w bilioteka są funkcje funkcja1 i funkcja2. Poniżej znajduje się przykład z wszystkimi przedstawionymi powyżej możliwościami importu<br>import os # Importowanie biblioteki
import numpy as np # Importowanie biblioteki z aliasem
from pandas import DataFrame, read_csv # Importowanie tylko klasy i funkcji

# Utworzenie DataFrame z biblioteki Pandas przez wczytanie danych z pliku txt
data_frame = read_csv(os.path.join("/path/to/","filename.csv"))
# Konwersja na numpy array (to_numpy() jest metodą DataFrame)
array = data_frame.to_numpy()

# Obliczenie sumy wszystkich elementów wektora
array_sum = np.sum(array)
Copy<br><br>Kliknij <a data-tooltip-position="top" aria-label="Wstęp do języka Python" data-href="Wstęp do języka Python" href="tematy\wstęp-do-języka-python.html" class="internal-link" target="_self" rel="noopener">tutaj</a>, aby wrócić do strony głównej tematu. Możesz stamtąd przejść do wykonania zadań przygotowanych w Jupyter Notebook.<br><br><br>
<br>
<br><a rel="noopener" class="external-link" href="https://www.mygreatlearning.com/blog/open-source-python-libraries/" target="_blank">https://www.mygreatlearning.com/blog/open-source-python-libraries/</a><a href="about:blank#fnref-1-e7278561d5bd0047" class="footnote-backref footnote-link" target="_self" rel="noopener">↩︎</a>
]]></description><link>tematy\files-wstęp-do-języka-python\używanie-bibliotek.html</link><guid isPermaLink="false">Tematy/Files Wstęp do języka Python/Używanie bibliotek.md</guid><pubDate>Mon, 12 Aug 2024 23:20:23 GMT</pubDate><enclosure url="lib\media\libraries_in_python.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;lib\media\libraries_in_python.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Co dalej]]></title><description><![CDATA[ 
 <br><img alt="PythonDataTypes.png" src="lib\media\pythondatatypes.png"><br>
Źródło: <a data-footref="meme1" href="about:blank#fn-1-e7278561d5bd0047" class="footnote-link" target="_self" rel="noopener">[1]</a><br><br>Przejdź do kolejnego zagadnienia (<a data-href="Pętle i instrukcje warunkowe" href="tematy\files-wstęp-do-języka-python\pętle-i-instrukcje-warunkowe.html" class="internal-link" target="_self" rel="noopener">Pętle i instrukcje warunkowe</a>) lub kliknij <a data-tooltip-position="top" aria-label="Wstęp do języka Python" data-href="Wstęp do języka Python" href="tematy\wstęp-do-języka-python.html" class="internal-link" target="_self" rel="noopener">tutaj</a>, aby wrócić do strony głównej tematu.<br><br><br>
<br>
<br><a rel="noopener" class="external-link" href="https://programmerhumor.io/python-memes/im-a-python-programmer-2/" target="_blank">https://programmerhumor.io/python-memes/im-a-python-programmer-2/</a><a href="about:blank#fnref-1-e7278561d5bd0047" class="footnote-backref footnote-link" target="_self" rel="noopener">↩︎</a>
]]></description><link>tematy\files-wstęp-do-języka-python\zmienne-i-podstawowe-typy-danych.html</link><guid isPermaLink="false">Tematy/Files Wstęp do języka Python/Zmienne i podstawowe typy danych.md</guid><pubDate>Mon, 12 Aug 2024 22:17:57 GMT</pubDate><enclosure url="lib\media\pythondatatypes.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;lib\media\pythondatatypes.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Analiza danych przy pomocy Pandas i numpy]]></title><description><![CDATA[ 
 <br>Pandas to biblioteka w języku Python, stworzona z myślą o łatwiej i efektywnej analizie danych.<br>Pandas pozwala na szybkie, elastyczne i intuicyjne operacje na danych, zarówno jednowymiarowych (Series), jak i wielowymiarowych (DataFrame).<br> [Eksploracja Danych]<br>Możliwości biblioteki Pandas:<br>
<br>Wczytywanie i zapisywanie danych w różnych formatach:  CSV, Excel, JSON i SQL
<br>Przekształcanie i czyszczenie danych: 
<br>
<br>Usuwanie wybranych kolumn 
<br>Wyświetlanie i zliczanie unikalnych wartości w kolumnach 
<br>Usuwanie brakujących wartości 
<br>Uzupełnianie brakujących wartości
<br>
<br>Analiza statystyczna: 
<br>
<br>Wyświetlanie podstawowych statystyk opisowych
<br>Wyświetlanie liczby wierszy i kolumn DataFrame 
<br>Wyświetlanie typów danych w każdej kolumnie
<br>
<br>Wizualizacja danych: 
<br>
<br>Integracja z bibliotekami do wizualizacji danych (np. Matplotlib, Seaborn)
<br>Wczytywanie i zapis danych:<br>Wczytywanie danych z pliku  CSV:<br>   import pandas as pd 
   df = pd.read_csv('plik.csv')
Copy<br>Zapis danych jako pliku CSV:<br>   df.to_csv('nowy_plik.csv', index=False)
Copy<br>Wczytywanie danych z pliku Excel:<br>   df = pd.read_excel('plik.xlsx')
Copy<br>Wczytywanie danych z pliku JSON:<br>   df = pd.read_json('plik.json')
Copy<br>Podstawowe Operacje na DataFrame:<br>
<br>
Wyświetlanie ostatnich 5 wierszy:
print(df.tail()) 
Copy

<br>
Wyświetlanie informacji o DataFrame:
print(df.info()) 
Copy

<br>
Wyświetlanie podstawowych statystyk opisowych:

<br>print(df.describe())
Copy<br>
<br>Wyświetlanie liczby wierszy i kolumn Dataframe:
<br>print(df.shape)
Copy<br>
<br>Wyświetlanie typów danych w każdej kolumnie:
<br>print(df.dtypes)
Copy<br>
<br>Wyświetlanie kolumn:
<br>print(df.columns)
Copy<br>Przekształcanie, czyszczenie i transformacje danych: <br> Wyświetlanie i zliczanie unikalnych wartości w kolumnie :<br>print(df.['nazwa_kolumny'].unique())

print(df.['nazwa_kolumny'].value_counts())
Copy<br> Usuwanie wybranej kolumny:<br>df.drop(columns=['nazwa_kolumny'], inplace=True)
Copy<br>Wyświetlanie brakujących danych:<br>print(df.isnull().sum())
Copy<br>Usuwanie brakujących wartości<br>df.dropna(inplace=True)
Copy<br>Uzupełnianie brakujących wartości<br>df.fillna(0, inplace=True)
Copy<br>Filtrowanie wierszy, gdzie wartość w kolumnie 'wiek' jest większa niż 25:<br>df_filtered = df[df['wiek'] &gt; 25]
Copy<br>Filtrowanie wierszy, gdzie wartość w kolumnie 'wiek' jest większa niż 25 i w kolumnie 'miasto' jest równa 'Poznań':<br>df_filtered = df[(df['wiek'] &gt; 25) &amp; (df['miasto'] == 'Poznań')]
Copy<br>Grupowanie danych i obliczanie statystyk dla każdej grupy:<br>grouped = df.groupby('nazwa_kolumny').mean()
Copy<br>Sortowanie danych według wybranej kolumny:<br>df_sorted = df.sort_values(by='nazwa_kolumny', ascending=True)
Copy<br>Zmian nazw kolumn:<br>df.rename(columns={'stara_nazwa': 'nowa_nazwa'}, inplace=True)
Copy<br>Numpy to podstawowa biblioteka w języku Python, używana do obliczeń naukowych i analizy danych. Oferuje struktury danych, takie jak tablice wielowymiarowe (ndarray) i funkcje matematyczne.<br><br>
<br>Tworzenie i manipulowanie tablicami wielowymiarowymi:
<br>
<br>Tworzenie tablic z list, zakresów, plików 
<br>Operacje matematyczne na tablicach -
<br>Indeksowanie i wycinanie tablic
<br>Zmiana kształtu tablic 
<br>
<br>Funkcje matematyczne i statystyczne:
<br>
<br>Podstawowe operacje matematyczne (dodawanie, odejmowanie, mnożenie, dzielenie)
<br>Funkcje trygonometryczne 
<br>Funkcje statystyczne (średnia, mediana, odchylenie standardowe) 
<br>
<br>Algebra liniowa:
<br>
<br>Mnożenie macierzy 
<br>Wyznacznik macierzy
<br>Rozwiązywanie układów równań liniowych
<br>Wartości własne i wektory własne
<br>
<br>Generowanie liczb losowych z różnych rozkładów (normalny, jednostajny, itp.) 
<br>Wczytywanie i zapisywanie danych
<br>Tworzenie tablicy z samymi zerami:<br>a = np.zeros((3, 4)) # 3 wiersze, 4 kolumny
Copy<br><br>
Obliczanie średniej:<br>a = np.array([1, 2, 3, 4, 5])
mean = np.mean(a)
print(mean)
Copy]]></description><link>tematy\analiza-danych-przy-pomocy-pandas-i-numpy.html</link><guid isPermaLink="false">Tematy/Analiza danych przy pomocy Pandas i numpy.md</guid><pubDate>Mon, 12 Aug 2024 21:26:26 GMT</pubDate></item><item><title><![CDATA[Wstęp do języka Python]]></title><description><![CDATA[ 
 <br>Pierwszym tematem kursu będzie krótki wstęp do programowania w Pythonie, bo będzie to język, który będziemy wykorzystywać w zadaniach i projekcie końcowym. Konkretnie powiemy tu o wersji Python 3.<br>Python jest szeroko wykorzystywany w uczeniu maszynowym, analizie danych, przy obliczeniach matematycznych, aplikacjach webowych po stronie serwera oraz do szybkiego prototypowania. Można go wykorzystać na różnych systemach, nie wymaga kompilatora, a jego składnia jest stosunkowo prosta i przypomina język angielski <a data-footref="w3s" href="about:blank#fn-1-e7278561d5bd0047" class="footnote-link" target="_self" rel="noopener">[1]</a>.<br>
<img alt="WhoWantsToBeDataScientist.png" src="tematy\images\whowantstobedatascientist.png"><br>
Źródło: <a data-footref="dsm" href="about:blank#fn-2-e7278561d5bd0047" class="footnote-link" target="_self" rel="noopener">[2]</a><br>W celu uproszczenia pracy, zadania będą przygotowane w formie Jupyter Notebooks, które możecie wstawić w celu uruchomienia np. na <a data-tooltip-position="top" aria-label="https://colab.research.google.com/" rel="noopener" class="external-link" href="https://colab.research.google.com/" target="_blank">Google Colab</a> lub <a data-tooltip-position="top" aria-label="https://www.kaggle.com/" rel="noopener" class="external-link" href="https://www.kaggle.com/" target="_blank">Kaggle</a> lub uruchomić lokalnie np. przy wykorzystaniu <a data-tooltip-position="top" aria-label="https://code.visualstudio.com/" rel="noopener" class="external-link" href="https://code.visualstudio.com/" target="_blank">Visual Studio Code</a>. Jak chodzi o programowanie w Pythonie (bez Notebooków) to mogę polecić korzystanie z <a data-tooltip-position="top" aria-label="https://www.jetbrains.com/pycharm/" rel="noopener" class="external-link" href="https://www.jetbrains.com/pycharm/" target="_blank">PyCharm'a</a>.<br>
<img alt="Jupyter-logo.svg" src="tematy\images\jupyter-logo.svg" style="width: 350px; max-width: 100%;"><br>
Źródło: <a data-footref="jpt" href="about:blank#fn-3-e7278561d5bd0047" class="footnote-link" target="_self" rel="noopener">[3]</a><br><br>
<br><a data-href="Jak korzystać z Jupyter Notebooks" href="tematy\files-wstęp-do-języka-python\jak-korzystać-z-jupyter-notebooks.html" class="internal-link" target="_self" rel="noopener">Jak korzystać z Jupyter Notebooks</a>
<br><a data-href="Składnia w języku Python" href="tematy\files-wstęp-do-języka-python\składnia-w-języku-python.html" class="internal-link" target="_self" rel="noopener">Składnia w języku Python</a>
<br><a data-href="Zmienne i podstawowe typy danych" href="tematy\files-wstęp-do-języka-python\zmienne-i-podstawowe-typy-danych.html" class="internal-link" target="_self" rel="noopener">Zmienne i podstawowe typy danych</a>
<br><a data-href="Pętle i instrukcje warunkowe" href="tematy\files-wstęp-do-języka-python\pętle-i-instrukcje-warunkowe.html" class="internal-link" target="_self" rel="noopener">Pętle i instrukcje warunkowe</a>
<br><a data-href="Listy, krotki i zbiory" href="tematy\files-wstęp-do-języka-python\listy,-krotki-i-zbiory.html" class="internal-link" target="_self" rel="noopener">Listy, krotki i zbiory</a>
<br><a data-href="Funkcje i klasy" href="tematy\files-wstęp-do-języka-python\funkcje-i-klasy.html" class="internal-link" target="_self" rel="noopener">Funkcje i klasy</a>
<br><a data-href="Używanie bibliotek" href="tematy\files-wstęp-do-języka-python\używanie-bibliotek.html" class="internal-link" target="_self" rel="noopener">Używanie bibliotek</a>
<br>Oczywiście nie są to wszystkie zagadnienia związane z Pythonem. Dostępnych jest wiele kursów, poradników i stron z informacjami i ćwiczeniami na ten temat. Przykładami mogą być <a data-tooltip-position="top" aria-label="https://www.w3schools.com/python/default.asp" rel="noopener" class="external-link" href="https://www.w3schools.com/python/default.asp" target="_blank">w3schools</a> i <a data-tooltip-position="top" aria-label="https://www.kaggle.com/learn/python" rel="noopener" class="external-link" href="https://www.kaggle.com/learn/python" target="_blank">kaggle</a>.<br><br>Ćwiczenia dla tego tematu zostały zebrane <a data-tooltip-position="top" aria-label="https://github.com/" rel="noopener" class="external-link" href="https://github.com/" target="_blank">tutaj</a>.<br><br>Kliknij <a data-tooltip-position="top" aria-label="Index" data-href="Index" href="index.html" class="internal-link" target="_self" rel="noopener">tutaj</a>, aby wrócić do strony głównej kursu.<br><br><br><br><br>
<br>
<br><a rel="noopener" class="external-link" href="https://www.w3schools.com/python/python_intro.asp" target="_blank">https://www.w3schools.com/python/python_intro.asp</a><a href="about:blank#fnref-1-e7278561d5bd0047" class="footnote-backref footnote-link" target="_self" rel="noopener">↩︎</a>
<br><a rel="noopener" class="external-link" href="https://programmerhumor.io/python-memes/python-10/" target="_blank">https://programmerhumor.io/python-memes/python-10/</a><a href="about:blank#fnref-2-e7278561d5bd0047" class="footnote-backref footnote-link" target="_self" rel="noopener">↩︎</a>
<br><a rel="noopener" class="external-link" href="https://www.jetbrains.com/pycharm/" target="_blank">https://www.jetbrains.com/pycharm/</a><a href="about:blank#fnref-3-e7278561d5bd0047" class="footnote-backref footnote-link" target="_self" rel="noopener">↩︎</a>
]]></description><link>tematy\wstęp-do-języka-python.html</link><guid isPermaLink="false">Tematy/Wstęp do języka Python.md</guid><pubDate>Mon, 12 Aug 2024 23:22:23 GMT</pubDate><enclosure url="tematy\images\whowantstobedatascientist.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;tematy\images\whowantstobedatascientist.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Cześć!]]></title><description><![CDATA[ 
 <br><br>Witaj na kursie wprowadzającym do uczenia maszynowego. Wybierz interesujący Cię temat z listy poniżej:<br><br><br><a data-tooltip-position="top" aria-label="https://github.com/dariak153" rel="noopener" class="external-link" href="https://github.com/dariak153" target="_blank">@dariak153</a><br>
<a data-tooltip-position="top" aria-label="https://github.com/mmcza" rel="noopener" class="external-link" href="https://github.com/mmcza" target="_blank">@mmcza</a>]]></description><link>index.html</link><guid isPermaLink="false">Index.md</guid><pubDate>Mon, 12 Aug 2024 23:35:06 GMT</pubDate></item></channel></rss>